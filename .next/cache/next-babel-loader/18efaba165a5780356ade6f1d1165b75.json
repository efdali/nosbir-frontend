{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport { withAuth } from \"../utils/auth\";\nimport http from \"../utils/http\";\nimport Loading from \"../components/loading\";\n\nfunction Notifications({\n  data\n}) {\n  const {\n    0: notifications,\n    1: setNotifications\n  } = useState(data);\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    if (data.length === 0) {\n      setLoading(true);\n      http.get(\"deneme.php\", {\n        params: {\n          howMany: \"all\"\n        }\n      }).then(res => setNotifications(res.data.bildirimler)).then(() => setLoading(false)).catch(err => setLoading(false));\n    }\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Bildirimlerim\")), __jsx(\"div\", {\n    className: \"content\"\n  }, isLoading && __jsx(Loading, null), notifications.length > 0 && !isLoading && __jsx(\"ul\", null, notifications.map((n, i) => __jsx(\"li\", {\n    key: i\n  }, __jsx(Link, {\n    href: `/${n.link}`\n  }, __jsx(\"a\", null, n.content)))))));\n}\n\nNotifications.getInitialProps = async ctx => {\n  /*const data = await http\r\n    .get(\"bildirimler.php\", {\r\n      params: {\r\n        howMany: \"all\"\r\n      }\r\n    })\r\n    .then(res => res.data.bildirimler);*/\n  return {\n    data: []\n  };\n};\n\nexport default withAuth(Notifications);","map":{"version":3,"sources":["E:/projects/nosbir-frontend/pages/notifications.js"],"names":["React","useEffect","useState","Head","Link","withAuth","http","Loading","Notifications","data","notifications","setNotifications","isLoading","setLoading","length","get","params","howMany","then","res","bildirimler","catch","err","map","n","i","link","content","getInitialProps","ctx"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AACA,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAiC;AAC/B,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCT,QAAQ,CAACO,IAAD,CAAlD;AACA,QAAM;AAAA,OAACG,SAAD;AAAA,OAAYC;AAAZ,MAA0BX,QAAQ,CAAC,KAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,IAAI,CAACK,MAAL,KAAgB,CAApB,EAAuB;AACrBD,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAP,MAAAA,IAAI,CACDS,GADH,CACO,YADP,EACqB;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAAV,OADrB,EAEGC,IAFH,CAEQC,GAAG,IAAIR,gBAAgB,CAACQ,GAAG,CAACV,IAAJ,CAASW,WAAV,CAF/B,EAGGF,IAHH,CAGQ,MAAML,UAAU,CAAC,KAAD,CAHxB,EAIGQ,KAJH,CAISC,GAAG,IAAIT,UAAU,CAAC,KAAD,CAJ1B;AAKD;AACF,GATQ,EASN,EATM,CAAT;AAUA,SACE,4BACE,MAAC,IAAD,QACE,qCADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGD,SAAS,IAAI,MAAC,OAAD,OADhB,EAEGF,aAAa,CAACI,MAAd,GAAuB,CAAvB,IAA4B,CAACF,SAA7B,IACC,kBACGF,aAAa,CAACa,GAAd,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KACjB;AAAI,IAAA,GAAG,EAAEA;AAAT,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,IAAGD,CAAC,CAACE,IAAK;AAAvB,KACE,iBAAIF,CAAC,CAACG,OAAN,CADF,CADF,CADD,CADH,CAHJ,CAJF,CADF;AAqBD;;AACDnB,aAAa,CAACoB,eAAd,GAAgC,MAAMC,GAAN,IAAa;AAC3C;;;;;;;AAQA,SAAO;AACLpB,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAZD;;AAaA,eAAeJ,QAAQ,CAACG,aAAD,CAAvB","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Head from \"next/head\";\r\nimport Link from \"next/link\";\r\nimport { withAuth } from \"../utils/auth\";\r\nimport http from \"../utils/http\";\r\nimport Loading from \"../components/loading\";\r\nfunction Notifications({ data }) {\r\n  const [notifications, setNotifications] = useState(data);\r\n  const [isLoading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    if (data.length === 0) {\r\n      setLoading(true);\r\n      http\r\n        .get(\"deneme.php\", { params: { howMany: \"all\" } })\r\n        .then(res => setNotifications(res.data.bildirimler))\r\n        .then(() => setLoading(false))\r\n        .catch(err => setLoading(false));\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Bildirimlerim</title>\r\n      </Head>\r\n      <div className=\"content\">\r\n        {isLoading && <Loading />}\r\n        {notifications.length > 0 && !isLoading && (\r\n          <ul>\r\n            {notifications.map((n, i) => (\r\n              <li key={i}>\r\n                <Link href={`/${n.link}`}>\r\n                  <a>{n.content}</a>\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nNotifications.getInitialProps = async ctx => {\r\n  /*const data = await http\r\n    .get(\"bildirimler.php\", {\r\n      params: {\r\n        howMany: \"all\"\r\n      }\r\n    })\r\n    .then(res => res.data.bildirimler);*/\r\n\r\n  return {\r\n    data: []\r\n  };\r\n};\r\nexport default withAuth(Notifications);\r\n"]},"metadata":{},"sourceType":"module"}