{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { connect } from \"react-redux\";\nimport { fetchGroups } from \"../store/actions/groupActions\";\nimport Loading from \"./loading\";\nimport Error from \"./error\";\n\nclass Sidebar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderComponent\", () => {\n      const {\n        groups,\n        isLoading,\n        isRejected,\n        msg\n      } = this.props;\n\n      if (isLoading) {\n        return __jsx(Loading, null);\n      } else if (isRejected) {\n        return __jsx(Error, {\n          msg: msg\n        });\n      } else if (!groups.length) {\n        return __jsx(Error, {\n          msg: \"Grup Bulunamad\\u0131\"\n        });\n      } else {\n        return __jsx(\"ul\", null, groups.map((g, i) => __jsx(\"li\", {\n          key: i\n        }, __jsx(Link, {\n          href: g.group_seo\n        }, __jsx(\"a\", null, g.name.toLowerCase())))));\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.props.fetchGroups();\n  }\n\n  render() {\n    return __jsx(\"aside\", {\n      className: \"left-sidebar\"\n    }, __jsx(\"h5\", null, \"Kanallar\"), this.renderComponent());\n  }\n\n}\n\nconst mapStateToProps = ({\n  groups\n}) => ({\n  isLoading: groups.group_loading,\n  isRejected: groups.group_rejected,\n  msg: groups.group_msg,\n  groups: groups.group_groups\n});\n\nexport default connect(mapStateToProps, {\n  fetchGroups\n})(Sidebar);","map":{"version":3,"sources":["/home/efdali/projects/nosbir-frontend/components/sidebar.js"],"names":["React","Link","connect","fetchGroups","Loading","Error","Sidebar","Component","groups","isLoading","isRejected","msg","props","length","map","g","i","group_seo","name","toLowerCase","componentDidMount","render","renderComponent","mapStateToProps","group_loading","group_rejected","group_msg","group_groups"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AACA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AAAA;AAAA;;AAAA,6CAKlB,MAAM;AACtB,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,SAAV;AAAqBC,QAAAA,UAArB;AAAiCC,QAAAA;AAAjC,UAAyC,KAAKC,KAApD;;AAEA,UAAIH,SAAJ,EAAe;AACb,eAAO,MAAC,OAAD,OAAP;AACD,OAFD,MAEO,IAAIC,UAAJ,EAAgB;AACrB,eAAO,MAAC,KAAD;AAAO,UAAA,GAAG,EAAEC;AAAZ,UAAP;AACD,OAFM,MAEA,IAAI,CAACH,MAAM,CAACK,MAAZ,EAAoB;AACzB,eAAO,MAAC,KAAD;AAAO,UAAA,GAAG,EAAC;AAAX,UAAP;AACD,OAFM,MAEA;AACL,eACE,kBACGL,MAAM,CAACM,GAAP,CAAW,CAACC,CAAD,EAAIC,CAAJ,KACV;AAAI,UAAA,GAAG,EAAEA;AAAT,WACE,MAAC,IAAD;AAAM,UAAA,IAAI,EAAED,CAAC,CAACE;AAAd,WACE,iBAAIF,CAAC,CAACG,IAAF,CAAOC,WAAP,EAAJ,CADF,CADF,CADD,CADH,CADF;AAWD;AACF,KA3BmC;AAAA;;AACpCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,KAAL,CAAWT,WAAX;AACD;;AA0BDkB,EAAAA,MAAM,GAAG;AACP,WACE;AAAO,MAAA,SAAS,EAAC;AAAjB,OACE,6BADF,EAEG,KAAKC,eAAL,EAFH,CADF;AAMD;;AApCmC;;AAuCtC,MAAMC,eAAe,GAAG,CAAC;AAAEf,EAAAA;AAAF,CAAD,MAAiB;AACvCC,EAAAA,SAAS,EAAED,MAAM,CAACgB,aADqB;AAEvCd,EAAAA,UAAU,EAAEF,MAAM,CAACiB,cAFoB;AAGvCd,EAAAA,GAAG,EAAEH,MAAM,CAACkB,SAH2B;AAIvClB,EAAAA,MAAM,EAAEA,MAAM,CAACmB;AAJwB,CAAjB,CAAxB;;AAMA,eAAezB,OAAO,CAACqB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAA0CG,OAA1C,CAAf","sourcesContent":["import React from \"react\";\nimport Link from \"next/link\";\nimport { connect } from \"react-redux\";\nimport { fetchGroups } from \"../store/actions/groupActions\";\nimport Loading from \"./loading\";\nimport Error from \"./error\";\nclass Sidebar extends React.Component {\n  componentDidMount() {\n    this.props.fetchGroups();\n  }\n\n  renderComponent = () => {\n    const { groups, isLoading, isRejected, msg } = this.props;\n\n    if (isLoading) {\n      return <Loading />;\n    } else if (isRejected) {\n      return <Error msg={msg} />;\n    } else if (!groups.length) {\n      return <Error msg=\"Grup BulunamadÄ±\" />;\n    } else {\n      return (\n        <ul>\n          {groups.map((g, i) => (\n            <li key={i}>\n              <Link href={g.group_seo}>\n                <a>{g.name.toLowerCase()}</a>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <aside className=\"left-sidebar\">\n        <h5>Kanallar</h5>\n        {this.renderComponent()}\n      </aside>\n    );\n  }\n}\n\nconst mapStateToProps = ({ groups }) => ({\n  isLoading: groups.group_loading,\n  isRejected: groups.group_rejected,\n  msg: groups.group_msg,\n  groups: groups.group_groups\n});\nexport default connect(mapStateToProps, { fetchGroups })(Sidebar);\n"]},"metadata":{},"sourceType":"module"}