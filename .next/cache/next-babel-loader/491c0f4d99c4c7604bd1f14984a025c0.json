{"ast":null,"code":"export const FETCHED_POSTS = 'FETCHED_POSTS';\nexport const REJECTED_POSTS = 'REJECTED_POSTS';\nexport const FETCHING_POSTS = 'FETCHING_POSTS';\nexport const fetchedPosts = (posts, total) => ({\n  type: FETCHED_POSTS,\n  posts,\n  total\n});\nexport const rejectedPosts = msg => ({\n  type: REJECTED_POSTS,\n  msg\n});\nexport const fetchingPosts = () => ({\n  type: FETCHING_POSTS\n});\nexport const fetchPosts = (group = '') => (dispatch, getState, http) => {\n  dispatch(fetchingPosts());\n  let params = {};\n  if (group) params = {\n    topluluk: group\n  };\n  http.get('postlar.php', {\n    params\n  }).then(res => res.data).then(res => {\n    if (res.durum) {\n      dispatch(fetchedPosts(res.postlar, res.toplam));\n    } else {\n      dispatch(rejectedPosts(res.mesaj));\n    }\n  }).catch(err => dispatch(rejectedPosts(err)));\n};","map":{"version":3,"sources":["/home/efdali/projects/nosbir-frontend/store/actions/postsActions.js"],"names":["FETCHED_POSTS","REJECTED_POSTS","FETCHING_POSTS","fetchedPosts","posts","total","type","rejectedPosts","msg","fetchingPosts","fetchPosts","group","dispatch","getState","http","params","topluluk","get","then","res","data","durum","postlar","toplam","mesaj","catch","err"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,KAAR,MAAmB;AAC7CC,EAAAA,IAAI,EAAEN,aADuC;AAE7CI,EAAAA,KAF6C;AAG7CC,EAAAA;AAH6C,CAAnB,CAArB;AAKP,OAAO,MAAME,aAAa,GAAGC,GAAG,KAAK;AACnCF,EAAAA,IAAI,EAAEL,cAD6B;AAEnCO,EAAAA;AAFmC,CAAL,CAAzB;AAIP,OAAO,MAAMC,aAAa,GAAG,OAAO;AAClCH,EAAAA,IAAI,EAAEJ;AAD4B,CAAP,CAAtB;AAIP,OAAO,MAAMQ,UAAU,GAAG,CAACC,KAAK,GAAG,EAAT,KAAgB,CAACC,QAAD,EAAWC,QAAX,EAAqBC,IAArB,KAA8B;AACtEF,EAAAA,QAAQ,CAACH,aAAa,EAAd,CAAR;AACA,MAAIM,MAAM,GAAG,EAAb;AACA,MAAIJ,KAAJ,EACEI,MAAM,GAAG;AACPC,IAAAA,QAAQ,EAAEL;AADH,GAAT;AAIFG,EAAAA,IAAI,CACDG,GADH,CACO,aADP,EACsB;AAClBF,IAAAA;AADkB,GADtB,EAIGG,IAJH,CAIQC,GAAG,IAAIA,GAAG,CAACC,IAJnB,EAKGF,IALH,CAKQC,GAAG,IAAI;AACX,QAAIA,GAAG,CAACE,KAAR,EAAe;AACbT,MAAAA,QAAQ,CAACT,YAAY,CAACgB,GAAG,CAACG,OAAL,EAAcH,GAAG,CAACI,MAAlB,CAAb,CAAR;AACD,KAFD,MAEO;AACLX,MAAAA,QAAQ,CAACL,aAAa,CAACY,GAAG,CAACK,KAAL,CAAd,CAAR;AACD;AACF,GAXH,EAYGC,KAZH,CAYSC,GAAG,IAAId,QAAQ,CAACL,aAAa,CAACmB,GAAD,CAAd,CAZxB;AAaD,CArBM","sourcesContent":["export const FETCHED_POSTS = 'FETCHED_POSTS';\nexport const REJECTED_POSTS = 'REJECTED_POSTS';\nexport const FETCHING_POSTS = 'FETCHING_POSTS';\n\nexport const fetchedPosts = (posts, total) => ({\n  type: FETCHED_POSTS,\n  posts,\n  total,\n});\nexport const rejectedPosts = msg => ({\n  type: REJECTED_POSTS,\n  msg,\n});\nexport const fetchingPosts = () => ({\n  type: FETCHING_POSTS,\n});\n\nexport const fetchPosts = (group = '') => (dispatch, getState, http) => {\n  dispatch(fetchingPosts());\n  let params = {};\n  if (group)\n    params = {\n      topluluk: group,\n    };\n\n  http\n    .get('postlar.php', {\n      params,\n    })\n    .then(res => res.data)\n    .then(res => {\n      if (res.durum) {\n        dispatch(fetchedPosts(res.postlar, res.toplam));\n      } else {\n        dispatch(rejectedPosts(res.mesaj));\n      }\n    })\n    .catch(err => dispatch(rejectedPosts(err)));\n};\n"]},"metadata":{},"sourceType":"module"}