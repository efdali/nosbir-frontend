{"ast":null,"code":"export const FETCHING_GROUPS = \"FETCHING_GROUPS\";\nexport const fetchingGroups = () => ({\n  type: FETCHING_GROUPS\n});\nexport const GROUPS_FAIL = \"GROUPS_FAIL\";\nexport const groupsFail = msg => ({\n  type: GROUPS_FAIL,\n  msg\n});\nexport const GROUPS_SUCCESS = \"GROUPS_SUCCESS\";\nexport const groupsSuccess = groups => ({\n  type: GROUPS_SUCCESS,\n  groups\n});\nexport const fetchGroups = () => (dispatch, getState, http) => {\n  dispatch(fetchingGroups());\n  http.get(\"gruplar.php\").then(res => res.data).then(res => {\n    if (res.durum) dispatch(groupsSuccess(res.gruplar));else dispatch(groupsFail(res.mesaj));\n  }).catch(err => dispatch(groupsFail(err)));\n};","map":{"version":3,"sources":["E:/projects/nosbir-frontend/store/actions/groupActions.js"],"names":["FETCHING_GROUPS","fetchingGroups","type","GROUPS_FAIL","groupsFail","msg","GROUPS_SUCCESS","groupsSuccess","groups","fetchGroups","dispatch","getState","http","get","then","res","data","durum","gruplar","mesaj","catch","err"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,cAAc,GAAG,OAAO;AAAEC,EAAAA,IAAI,EAAEF;AAAR,CAAP,CAAvB;AAEP,OAAO,MAAMG,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,UAAU,GAAGC,GAAG,KAAK;AAAEH,EAAAA,IAAI,EAAEC,WAAR;AAAqBE,EAAAA;AAArB,CAAL,CAAtB;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,aAAa,GAAGC,MAAM,KAAK;AAAEN,EAAAA,IAAI,EAAEI,cAAR;AAAwBE,EAAAA;AAAxB,CAAL,CAA5B;AAEP,OAAO,MAAMC,WAAW,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,EAAqBC,IAArB,KAA8B;AAC7DF,EAAAA,QAAQ,CAACT,cAAc,EAAf,CAAR;AAEAW,EAAAA,IAAI,CACDC,GADH,CACO,aADP,EAEGC,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAFnB,EAGGF,IAHH,CAGQC,GAAG,IAAI;AACX,QAAIA,GAAG,CAACE,KAAR,EAAeP,QAAQ,CAACH,aAAa,CAACQ,GAAG,CAACG,OAAL,CAAd,CAAR,CAAf,KACKR,QAAQ,CAACN,UAAU,CAACW,GAAG,CAACI,KAAL,CAAX,CAAR;AACN,GANH,EAOGC,KAPH,CAOSC,GAAG,IAAIX,QAAQ,CAACN,UAAU,CAACiB,GAAD,CAAX,CAPxB;AAQD,CAXM","sourcesContent":["export const FETCHING_GROUPS = \"FETCHING_GROUPS\";\r\nexport const fetchingGroups = () => ({ type: FETCHING_GROUPS });\r\n\r\nexport const GROUPS_FAIL = \"GROUPS_FAIL\";\r\nexport const groupsFail = msg => ({ type: GROUPS_FAIL, msg });\r\n\r\nexport const GROUPS_SUCCESS = \"GROUPS_SUCCESS\";\r\nexport const groupsSuccess = groups => ({ type: GROUPS_SUCCESS, groups });\r\n\r\nexport const fetchGroups = () => (dispatch, getState, http) => {\r\n  dispatch(fetchingGroups());\r\n\r\n  http\r\n    .get(\"gruplar.php\")\r\n    .then(res => res.data)\r\n    .then(res => {\r\n      if (res.durum) dispatch(groupsSuccess(res.gruplar));\r\n      else dispatch(groupsFail(res.mesaj));\r\n    })\r\n    .catch(err => dispatch(groupsFail(err)));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}