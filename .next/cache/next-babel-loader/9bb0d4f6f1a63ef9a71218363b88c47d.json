{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Post from \"./post\";\nimport Loading from \"./loading\";\nimport Error from \"./error\";\nimport { connect } from \"react-redux\";\nimport { fetchPosts } from \"../store/actions/postsActions\";\n\nvar PostList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostList, _React$Component);\n\n  function PostList() {\n    _classCallCheck(this, PostList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PostList).apply(this, arguments));\n  }\n\n  _createClass(PostList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchPosts(this.props.group);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          posts = _this$props.posts,\n          isLoading = _this$props.isLoading,\n          isRejected = _this$props.isRejected,\n          msg = _this$props.msg;\n      if (isLoading) return __jsx(Loading, null);else if (isRejected) return __jsx(Error, {\n        msg: msg\n      });else if (!posts.length) return __jsx(Error, {\n        msg: \"Post Bulunamad\\u0131.\"\n      });\n      return __jsx(\"div\", {\n        className: \"post-list\"\n      }, posts.map(function (p, i) {\n        return __jsx(Post, {\n          post: p,\n          key: i\n        });\n      }), __jsx(\"button\", null, \"Daha Fazla Nos\"));\n    }\n  }]);\n\n  return PostList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var posts = _ref.posts;\n  return {\n    posts: posts.post_posts,\n    isLoading: posts.post_loading,\n    isRejected: posts.post_rejected,\n    msg: posts.post_msg\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts: fetchPosts\n})(PostList);","map":{"version":3,"sources":["/home/efdali/projects/nosbir-frontend/components/postList.js"],"names":["React","Post","Loading","Error","connect","fetchPosts","PostList","props","group","posts","isLoading","isRejected","msg","length","map","p","i","Component","mapStateToProps","post_posts","post_loading","post_rejected","post_msg"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,+BAA3B;;IACMC,Q;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWF,UAAX,CAAsB,KAAKE,KAAL,CAAWC,KAAjC;AACD;;;6BACQ;AAAA,wBACuC,KAAKD,KAD5C;AAAA,UACCE,KADD,eACCA,KADD;AAAA,UACQC,SADR,eACQA,SADR;AAAA,UACmBC,UADnB,eACmBA,UADnB;AAAA,UAC+BC,GAD/B,eAC+BA,GAD/B;AAEP,UAAIF,SAAJ,EAAe,OAAO,MAAC,OAAD,OAAP,CAAf,KACK,IAAIC,UAAJ,EAAgB,OAAO,MAAC,KAAD;AAAO,QAAA,GAAG,EAAEC;AAAZ,QAAP,CAAhB,KACA,IAAG,CAACH,KAAK,CAACI,MAAV,EAAkB,OAAO,MAAC,KAAD;AAAO,QAAA,GAAG,EAAC;AAAX,QAAP;AACvB,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGJ,KAAK,CAACK,GAAN,CAAU,UAACC,CAAD,EAAIC,CAAJ;AAAA,eACT,MAAC,IAAD;AAAM,UAAA,IAAI,EAAED,CAAZ;AAAe,UAAA,GAAG,EAAEC;AAApB,UADS;AAAA,OAAV,CADH,EAIE,uCAJF,CADF;AAQD;;;;EAjBoBhB,KAAK,CAACiB,S;;AAmB7B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAET,KAAF,QAAEA,KAAF;AAAA,SAAc;AACpCA,IAAAA,KAAK,EAAEA,KAAK,CAACU,UADuB;AAEpCT,IAAAA,SAAS,EAAED,KAAK,CAACW,YAFmB;AAGpCT,IAAAA,UAAU,EAAEF,KAAK,CAACY,aAHkB;AAIpCT,IAAAA,GAAG,EAAEH,KAAK,CAACa;AAJyB,GAAd;AAAA,CAAxB;;AAMA,eAAelB,OAAO,CAACc,eAAD,EAAkB;AAAEb,EAAAA,UAAU,EAAVA;AAAF,CAAlB,CAAP,CAAyCC,QAAzC,CAAf","sourcesContent":["import React from \"react\";\nimport Post from \"./post\";\nimport Loading from \"./loading\";\nimport Error from \"./error\";\nimport { connect } from \"react-redux\";\nimport { fetchPosts } from \"../store/actions/postsActions\";\nclass PostList extends React.Component {\n  componentDidMount() {\n    this.props.fetchPosts(this.props.group);\n  }\n  render() {\n    const { posts, isLoading, isRejected, msg } = this.props;\n    if (isLoading) return <Loading />;\n    else if (isRejected) return <Error msg={msg} />;\n    else if(!posts.length) return <Error msg=\"Post BulunamadÄ±.\"/>;\n    return (\n      <div className=\"post-list\">\n        {posts.map((p, i) => (\n          <Post post={p} key={i} />\n        ))}\n        <button>Daha Fazla Nos</button>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = ({posts}) => ({\n  posts: posts.post_posts,\n  isLoading: posts.post_loading,\n  isRejected: posts.post_rejected,\n  msg: posts.post_msg\n});\nexport default connect(mapStateToProps, { fetchPosts })(PostList);\n"]},"metadata":{},"sourceType":"module"}