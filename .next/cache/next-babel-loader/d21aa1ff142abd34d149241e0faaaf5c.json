{"ast":null,"code":"export const FETCHED_GROUPS = 'FETCHED_GROUPS';\nexport const REJECTED_GROUPS = 'REJECTED_GROUPS';\nexport const FETCHING_GROUPS = 'FETCHING_GROUPS';\nexport const fetchedGroups = groups => ({\n  type: FETCHED_GROUPS,\n  groups\n});\nexport const rejectedGroups = msg => ({\n  type: REJECTED_GROUPS,\n  msg\n});\nexport const fetchingGroups = () => ({\n  type: FETCHING_GROUPS\n});\nexport const fetchGroups = () => (dispatch, getState, http) => {\n  dispatch(fetchingGroups());\n  http.get('/gruplar.php').then(res => res.data).then(res => {\n    if (res.durum) {\n      dispatch(fetchedGroups(res.gruplar));\n    } else {\n      dispatch(rejectedGroups(res.mesaj));\n    }\n  }).catch(err => dispatch(rejectedGroups(err)));\n};","map":{"version":3,"sources":["/home/efdali/projects/nosbir-frontend/store/actions/groupActions.js"],"names":["FETCHED_GROUPS","REJECTED_GROUPS","FETCHING_GROUPS","fetchedGroups","groups","type","rejectedGroups","msg","fetchingGroups","fetchGroups","dispatch","getState","http","get","then","res","data","durum","gruplar","mesaj","catch","err"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,aAAa,GAAGC,MAAM,KAAK;AACtCC,EAAAA,IAAI,EAAEL,cADgC;AAEtCI,EAAAA;AAFsC,CAAL,CAA5B;AAIP,OAAO,MAAME,cAAc,GAAGC,GAAG,KAAK;AACpCF,EAAAA,IAAI,EAAEJ,eAD8B;AAEpCM,EAAAA;AAFoC,CAAL,CAA1B;AAIP,OAAO,MAAMC,cAAc,GAAG,OAAO;AACnCH,EAAAA,IAAI,EAAEH;AAD6B,CAAP,CAAvB;AAGP,OAAO,MAAMO,WAAW,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,EAAqBC,IAArB,KAA8B;AAC7DF,EAAAA,QAAQ,CAACF,cAAc,EAAf,CAAR;AACAI,EAAAA,IAAI,CACDC,GADH,CACO,cADP,EAEGC,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAFnB,EAGGF,IAHH,CAGQC,GAAG,IAAI;AACX,QAAIA,GAAG,CAACE,KAAR,EAAe;AACbP,MAAAA,QAAQ,CAACP,aAAa,CAACY,GAAG,CAACG,OAAL,CAAd,CAAR;AACD,KAFD,MAEO;AACLR,MAAAA,QAAQ,CAACJ,cAAc,CAACS,GAAG,CAACI,KAAL,CAAf,CAAR;AACD;AACF,GATH,EAUGC,KAVH,CAUSC,GAAG,IAAIX,QAAQ,CAACJ,cAAc,CAACe,GAAD,CAAf,CAVxB;AAWD,CAbM","sourcesContent":["export const FETCHED_GROUPS = 'FETCHED_GROUPS';\nexport const REJECTED_GROUPS = 'REJECTED_GROUPS';\nexport const FETCHING_GROUPS = 'FETCHING_GROUPS';\n\nexport const fetchedGroups = groups => ({\n  type: FETCHED_GROUPS,\n  groups,\n});\nexport const rejectedGroups = msg => ({\n  type: REJECTED_GROUPS,\n  msg,\n});\nexport const fetchingGroups = () => ({\n  type: FETCHING_GROUPS,\n});\nexport const fetchGroups = () => (dispatch, getState, http) => {\n  dispatch(fetchingGroups());\n  http\n    .get('/gruplar.php')\n    .then(res => res.data)\n    .then(res => {\n      if (res.durum) {\n        dispatch(fetchedGroups(res.gruplar));\n      } else {\n        dispatch(rejectedGroups(res.mesaj));\n      }\n    })\n    .catch(err => dispatch(rejectedGroups(err)));\n};\n"]},"metadata":{},"sourceType":"module"}