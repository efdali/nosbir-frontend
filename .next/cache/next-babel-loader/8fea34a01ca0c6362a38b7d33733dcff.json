{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actions from \"../actions/commentActions\";\nconst initialState = {\n  comments: [],\n  total: 0,\n  isLoading: false,\n  isRejected: false,\n  errorMsg: \"\"\n};\nexport default function commentReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.FETCHING_COMMENTS:\n      return _Object$assign({}, state, {\n        isLoading: true\n      });\n\n    case actions.COMMENTS_FAIL:\n      return _Object$assign({}, state, {\n        isLoading: false,\n        isRejected: true,\n        errorMsg: action.msg\n      });\n\n    case actions.COMMENTS_SUCCESS:\n      return _Object$assign({}, state, _objectSpread({}, initialState, {\n        comments: action.comments,\n        total: action.total\n      }));\n\n    case actions.ADD_COMMENT:\n      return _Object$assign({}, state, {\n        comments: [action.newComment, ...state.comments]\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["E:/projects/nosbir-frontend/store/reducers/commentReducer.js"],"names":["actions","initialState","comments","total","isLoading","isRejected","errorMsg","commentReducer","state","action","type","FETCHING_COMMENTS","COMMENTS_FAIL","msg","COMMENTS_SUCCESS","ADD_COMMENT","newComment"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAKA,OAAZ,MAAyB,2BAAzB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,KAAK,EAAE,CAFY;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,UAAU,EAAE,KAJO;AAKnBC,EAAAA,QAAQ,EAAE;AALS,CAArB;AAQA,eAAe,SAASC,cAAT,CAAwBC,KAAK,GAAGP,YAAhC,EAA8CQ,MAA9C,EAAsD;AACnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,OAAO,CAACW,iBAAb;AACE,aAAO,eAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAC9BJ,QAAAA,SAAS,EAAE;AADmB,OAAzB,CAAP;;AAGF,SAAKJ,OAAO,CAACY,aAAb;AACE,aAAO,eAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BJ,QAAAA,SAAS,EAAE,KADmB;AAE9BC,QAAAA,UAAU,EAAE,IAFkB;AAG9BC,QAAAA,QAAQ,EAAEG,MAAM,CAACI;AAHa,OAAzB,CAAP;;AAKF,SAAKb,OAAO,CAACc,gBAAb;AACE,aAAO,eAAc,EAAd,EAAkBN,KAAlB,oBACFP,YADE;AAELC,QAAAA,QAAQ,EAAEO,MAAM,CAACP,QAFZ;AAGLC,QAAAA,KAAK,EAAEM,MAAM,CAACN;AAHT,SAAP;;AAKA,SAAKH,OAAO,CAACe,WAAb;AACE,aAAO,eAAc,EAAd,EAAiBP,KAAjB,EAAuB;AAC5BN,QAAAA,QAAQ,EAAC,CAACO,MAAM,CAACO,UAAR,EAAmB,GAAGR,KAAK,CAACN,QAA5B;AADmB,OAAvB,CAAP;;AAGJ;AACE,aAAOM,KAAP;AAtBJ;AAwBD","sourcesContent":["import * as actions from \"../actions/commentActions\";\r\n\r\nconst initialState = {\r\n  comments: [],\r\n  total: 0,\r\n  isLoading: false,\r\n  isRejected: false,\r\n  errorMsg: \"\"\r\n};\r\n\r\nexport default function commentReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.FETCHING_COMMENTS:\r\n      return Object.assign({}, state, {\r\n        isLoading: true\r\n      });\r\n    case actions.COMMENTS_FAIL:\r\n      return Object.assign({}, state, {\r\n        isLoading: false,\r\n        isRejected: true,\r\n        errorMsg: action.msg\r\n      });\r\n    case actions.COMMENTS_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        ...initialState,\r\n        comments: action.comments,\r\n        total: action.total\r\n      });\r\n      case actions.ADD_COMMENT:\r\n        return Object.assign({},state,{\r\n          comments:[action.newComment,...state.comments]\r\n        });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}