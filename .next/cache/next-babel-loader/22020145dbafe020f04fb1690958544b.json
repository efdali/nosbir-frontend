{"ast":null,"code":"export var FETCHED_GROUPS = 'FETCHED_GROUPS';\nexport var REJECTED_GROUPS = 'REJECTED_GROUPS';\nexport var FETCHING_GROUPS = 'FETCHING_GROUPS';\nexport var fetchedGroups = function fetchedGroups(groups) {\n  return {\n    type: FETCHED_GROUPS,\n    groups: groups\n  };\n};\nexport var rejectedGroups = function rejectedGroups(msg) {\n  return {\n    type: REJECTED_GROUPS,\n    msg: msg\n  };\n};\nexport var fetchingGroups = function fetchingGroups() {\n  return {\n    type: FETCHING_GROUPS\n  };\n};\nexport var fetchGroups = function fetchGroups() {\n  return function (dispatch, getState, http) {\n    dispatch(fetchingGroups());\n    http.get('/gruplar.php').then(function (res) {\n      return res.data;\n    }).then(function (res) {\n      if (res.durum) {\n        dispatch(fetchedGroups(res.gruplar));\n      } else {\n        dispatch(rejectedGroups(res.mesaj));\n      }\n    })[\"catch\"](function (err) {\n      return dispatch(rejectedGroups(err));\n    });\n  };\n};","map":{"version":3,"sources":["/home/efdali/projects/nosbir-frontend/store/actions/groupActions.js"],"names":["FETCHED_GROUPS","REJECTED_GROUPS","FETCHING_GROUPS","fetchedGroups","groups","type","rejectedGroups","msg","fetchingGroups","fetchGroups","dispatch","getState","http","get","then","res","data","durum","gruplar","mesaj","err"],"mappings":"AAAA,OAAO,IAAMA,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,MAAM;AAAA,SAAK;AACtCC,IAAAA,IAAI,EAAEL,cADgC;AAEtCI,IAAAA,MAAM,EAANA;AAFsC,GAAL;AAAA,CAA5B;AAIP,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,GAAG;AAAA,SAAK;AACpCF,IAAAA,IAAI,EAAEJ,eAD8B;AAEpCM,IAAAA,GAAG,EAAHA;AAFoC,GAAL;AAAA,CAA1B;AAIP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAO;AACnCH,IAAAA,IAAI,EAAEH;AAD6B,GAAP;AAAA,CAAvB;AAGP,OAAO,IAAMO,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAqBC,IAArB,EAA8B;AAC7DF,IAAAA,QAAQ,CAACF,cAAc,EAAf,CAAR;AACAI,IAAAA,IAAI,CACDC,GADH,CACO,cADP,EAEGC,IAFH,CAEQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAR;AAAA,KAFX,EAGGF,IAHH,CAGQ,UAAAC,GAAG,EAAI;AACX,UAAIA,GAAG,CAACE,KAAR,EAAe;AACbP,QAAAA,QAAQ,CAACP,aAAa,CAACY,GAAG,CAACG,OAAL,CAAd,CAAR;AACD,OAFD,MAEO;AACLR,QAAAA,QAAQ,CAACJ,cAAc,CAACS,GAAG,CAACI,KAAL,CAAf,CAAR;AACD;AACF,KATH,WAUS,UAAAC,GAAG;AAAA,aAAIV,QAAQ,CAACJ,cAAc,CAACc,GAAD,CAAf,CAAZ;AAAA,KAVZ;AAWD,GAb0B;AAAA,CAApB","sourcesContent":["export const FETCHED_GROUPS = 'FETCHED_GROUPS';\nexport const REJECTED_GROUPS = 'REJECTED_GROUPS';\nexport const FETCHING_GROUPS = 'FETCHING_GROUPS';\n\nexport const fetchedGroups = groups => ({\n  type: FETCHED_GROUPS,\n  groups,\n});\nexport const rejectedGroups = msg => ({\n  type: REJECTED_GROUPS,\n  msg,\n});\nexport const fetchingGroups = () => ({\n  type: FETCHING_GROUPS,\n});\nexport const fetchGroups = () => (dispatch, getState, http) => {\n  dispatch(fetchingGroups());\n  http\n    .get('/gruplar.php')\n    .then(res => res.data)\n    .then(res => {\n      if (res.durum) {\n        dispatch(fetchedGroups(res.gruplar));\n      } else {\n        dispatch(rejectedGroups(res.mesaj));\n      }\n    })\n    .catch(err => dispatch(rejectedGroups(err)));\n};\n"]},"metadata":{},"sourceType":"module"}