{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { shareComment } from \"../store/actions/commentActions\";\nexport default function WriteComment(props) {\n  const dispatch = useDispatch();\n  const {\n    isAuthenticated\n  } = useSelector(state => state.auth);\n  const {\n    0: comment,\n    1: setComment\n  } = useState(\"\");\n\n  const shareCommentHandler = e => {\n    e.preventDefault();\n    if (!isAuthenticated) return false;else if (comment.length < 1) return false;\n    dispatch(shareComment(comment, props.postId));\n    setComment(\"\");\n  };\n\n  return __jsx(\"div\", {\n    className: \"write-comment\"\n  }, __jsx(\"form\", {\n    onSubmit: shareCommentHandler\n  }, __jsx(\"textarea\", {\n    placeholder: \"bir yorum yaz\",\n    onChange: e => {\n      setComment(e.target.value);\n    },\n    readOnly: !isAuthenticated,\n    value: isAuthenticated ? comment : 'Yorum yapmak için oturum açmalısınız!...'\n  }), __jsx(\"button\", {\n    className: \"default-btn\",\n    onClick: shareCommentHandler\n  }, __jsx(\"img\", {\n    src: \"/edit-post-icon.png\",\n    alt: \"yorum yaz\"\n  }))));\n}","map":{"version":3,"sources":["E:/projects/nosbir-frontend/components/writeComment.js"],"names":["React","useState","useDispatch","useSelector","shareComment","WriteComment","props","dispatch","isAuthenticated","state","auth","comment","setComment","shareCommentHandler","e","preventDefault","length","postId","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,iCAA7B;AACA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC1C,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAsBL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAvC;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,EAAD,CAAtC;;AACA,QAAMY,mBAAmB,GAAGC,CAAC,IAAI;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI,CAACP,eAAL,EAAsB,OAAO,KAAP,CAAtB,KACK,IAAIG,OAAO,CAACK,MAAR,GAAiB,CAArB,EAAwB,OAAO,KAAP;AAE7BT,IAAAA,QAAQ,CAACH,YAAY,CAACO,OAAD,EAAUL,KAAK,CAACW,MAAhB,CAAb,CAAR;AACAL,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAPD;;AASA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAM,IAAA,QAAQ,EAAEC;AAAhB,KACE;AACE,IAAA,WAAW,EAAC,eADd;AAEE,IAAA,QAAQ,EAAEC,CAAC,IAAI;AACbF,MAAAA,UAAU,CAACE,CAAC,CAACI,MAAF,CAASC,KAAV,CAAV;AACD,KAJH;AAKE,IAAA,QAAQ,EAAE,CAACX,eALb;AAME,IAAA,KAAK,EAAEA,eAAe,GAAGG,OAAH,GAAa;AANrC,IADF,EASE;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAgC,IAAA,OAAO,EAAEE;AAAzC,KACE;AAAK,IAAA,GAAG,EAAC,qBAAT;AAA+B,IAAA,GAAG,EAAC;AAAnC,IADF,CATF,CADF,CADF;AAiBD","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { shareComment } from \"../store/actions/commentActions\";\r\nexport default function WriteComment(props) {\r\n  const dispatch = useDispatch();\r\n  const { isAuthenticated } = useSelector(state => state.auth);\r\n  const [comment, setComment] = useState(\"\");\r\n  const shareCommentHandler = e => {\r\n    e.preventDefault();\r\n    if (!isAuthenticated) return false;\r\n    else if (comment.length < 1) return false;\r\n\r\n    dispatch(shareComment(comment, props.postId));\r\n    setComment(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"write-comment\">\r\n      <form onSubmit={shareCommentHandler}>\r\n        <textarea\r\n          placeholder=\"bir yorum yaz\"\r\n          onChange={e => {\r\n            setComment(e.target.value);\r\n          }}\r\n          readOnly={!isAuthenticated}\r\n          value={isAuthenticated ? comment : 'Yorum yapmak için oturum açmalısınız!...'}\r\n        ></textarea>\r\n        <button className=\"default-btn\" onClick={shareCommentHandler}>\r\n          <img src=\"/edit-post-icon.png\" alt=\"yorum yaz\" />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}