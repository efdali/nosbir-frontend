{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Modal from \"./modal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { REGISTER_MODAL, setModalVisibility, LOGIN_MODAL } from \"../store/actions/modalActions\";\nimport { register } from \"../store/actions/authActions\";\nimport { toast } from \"react-toastify\";\nexport default function RegisterModal() {\n  const dispatch = useDispatch();\n  const {\n    isRegisterOpen\n  } = useSelector(state => state.modal);\n  const {\n    0: nick,\n    1: setNick\n  } = useState(\"\");\n  const {\n    0: passwd,\n    1: setPasswd\n  } = useState(\"\");\n  const {\n    0: passwdAgain,\n    1: setPasswdAgain\n  } = useState(\"\");\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: errors,\n    1: setErrors\n  } = useState([]);\n\n  const registerHandle = e => {\n    e.preventDefault();\n    const errors = [];\n    if (!nick || !passwd || !passwdAgain || !email) errors.push(\"Boş alan bırakmayın.\");\n    if (nick.length > 15) errors.push(\"Nick 15 karakterden fazla olamaz.\");\n    if (passwd !== passwdAgain) errors.push(\"Şifreler uyuşmuyor.\");\n    if (!email.includes(\"@\")) errors.push(\"Geçerli eposta adresi girin\");\n    setErrors(errors);\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    dispatch(register(nick, passwd, email));\n  };\n\n  return __jsx(Modal, {\n    isOpen: isRegisterOpen,\n    modal: REGISTER_MODAL\n  }, __jsx(\"div\", {\n    className: \"register-modal modal-content\"\n  }, __jsx(\"ul\", null, errors.map((e, i) => __jsx(\"li\", {\n    key: i\n  }, e))), __jsx(\"div\", {\n    className: \"form-wrapper\"\n  }, __jsx(\"form\", null, __jsx(\"input\", {\n    type: \"text\",\n    value: nick,\n    onChange: e => setNick(e.target.value),\n    className: \"default-input\",\n    placeholder: \"kullan\\u0131c\\u0131 ad\\u0131 giriniz\",\n    required: true,\n    maxLength: 15\n  }), __jsx(\"input\", {\n    type: \"password\",\n    value: passwd,\n    onChange: e => setPasswd(e.target.value),\n    className: \"default-input\",\n    placeholder: \"\\u015Fifre giriniz\",\n    required: true,\n    minLength: 6\n  }), __jsx(\"input\", {\n    type: \"password\",\n    value: passwdAgain,\n    onChange: e => setPasswdAgain(e.target.value),\n    className: \"default-input\",\n    placeholder: \"tekrar \\u015Fifre giriniz\",\n    required: true\n  }), __jsx(\"input\", {\n    type: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    className: \"default-input\",\n    placeholder: \"eposta adresi giriniz\",\n    required: true\n  }), __jsx(\"button\", {\n    className: \"default-btn btn-register\",\n    onClick: registerHandle\n  }, \"kay\\u0131t ol\"))), __jsx(\"p\", {\n    className: \"already-member\"\n  }, \"zaten hesab\\u0131n var m\\u0131?\", __jsx(\"button\", {\n    className: \"default-btn\",\n    onClick: () => dispatch(setModalVisibility(LOGIN_MODAL, true))\n  }, \"giri\\u015F yap\")), __jsx(\"p\", null, \"Kay\\u0131t olarak kullan\\u0131c\\u0131 s\\xF6zle\\u015Fmesini kabul etmi\\u015F olursunuz.\")));\n}","map":{"version":3,"sources":["E:/projects/nosbir-frontend/components/registerModal.js"],"names":["React","useState","Modal","useDispatch","useSelector","REGISTER_MODAL","setModalVisibility","LOGIN_MODAL","register","toast","RegisterModal","dispatch","isRegisterOpen","state","modal","nick","setNick","passwd","setPasswd","passwdAgain","setPasswdAgain","email","setEmail","errors","setErrors","registerHandle","e","preventDefault","push","length","includes","map","i","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Modal from \"./modal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  REGISTER_MODAL,\r\n  setModalVisibility,\r\n  LOGIN_MODAL\r\n} from \"../store/actions/modalActions\";\r\nimport { register } from \"../store/actions/authActions\";\r\nimport { toast } from \"react-toastify\";\r\nexport default function RegisterModal() {\r\n  const dispatch = useDispatch();\r\n  const { isRegisterOpen } = useSelector(state => state.modal);\r\n  const [nick, setNick] = useState(\"\");\r\n  const [passwd, setPasswd] = useState(\"\");\r\n  const [passwdAgain, setPasswdAgain] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n  const registerHandle = e => {\r\n    e.preventDefault();\r\n\r\n    const errors = [];\r\n    if (!nick || !passwd || !passwdAgain || !email)\r\n      errors.push(\"Boş alan bırakmayın.\");\r\n\r\n    if (nick.length > 15) errors.push(\"Nick 15 karakterden fazla olamaz.\");\r\n\r\n    if (passwd !== passwdAgain) errors.push(\"Şifreler uyuşmuyor.\");\r\n\r\n    if (!email.includes(\"@\")) errors.push(\"Geçerli eposta adresi girin\");\r\n\r\n    setErrors(errors);\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n\r\n    dispatch(register(nick, passwd, email));\r\n  };\r\n  return (\r\n    <Modal isOpen={isRegisterOpen} modal={REGISTER_MODAL}>\r\n      <div className=\"register-modal modal-content\">\r\n        <ul>\r\n          {errors.map((e, i) => (\r\n            <li key={i}>{e}</li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"form-wrapper\">\r\n          <form>\r\n            <input\r\n              type=\"text\"\r\n              value={nick}\r\n              onChange={e => setNick(e.target.value)}\r\n              className=\"default-input\"\r\n              placeholder=\"kullanıcı adı giriniz\"\r\n              required\r\n              maxLength={15}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              value={passwd}\r\n              onChange={e => setPasswd(e.target.value)}\r\n              className=\"default-input\"\r\n              placeholder=\"şifre giriniz\"\r\n              required\r\n              minLength={6}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              value={passwdAgain}\r\n              onChange={e => setPasswdAgain(e.target.value)}\r\n              className=\"default-input\"\r\n              placeholder=\"tekrar şifre giriniz\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={e => setEmail(e.target.value)}\r\n              className=\"default-input\"\r\n              placeholder=\"eposta adresi giriniz\"\r\n              required\r\n            />\r\n            <button\r\n              className=\"default-btn btn-register\"\r\n              onClick={registerHandle}\r\n            >\r\n              kayıt ol\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <p className=\"already-member\">\r\n          zaten hesabın var mı?\r\n          <button\r\n            className=\"default-btn\"\r\n            onClick={() => dispatch(setModalVisibility(LOGIN_MODAL, true))}\r\n          >\r\n            giriş yap\r\n          </button>\r\n        </p>\r\n        <p>Kayıt olarak kullanıcı sözleşmesini kabul etmiş olursunuz.</p>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}