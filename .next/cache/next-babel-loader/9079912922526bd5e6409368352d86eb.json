{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport GroupSidebar from \"../components/groupSidebar\";\nimport PostUserSidebar from \"../components/postUserSidebar\";\nimport { fetchPostDetails } from \"../store/actions/commentActions\";\nimport PostDetails from \"../components/postDetails\";\nimport { withAuth } from \"../utils/auth\";\nimport CommentList from \"../components/commentList\";\nimport Vote from \"../components/vote\";\nimport WriteComment from \"../components/writeComment\";\n\nconst Post = props => {\n  const {\n    post\n  } = props;\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, post.title), __jsx(\"meta\", {\n    name: \"author\",\n    content: post.user\n  }), __jsx(\"meta\", {\n    name: \"description\",\n    content: post.title\n  })), __jsx(GroupSidebar, null), __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(\"div\", {\n    className: \"post\"\n  }, __jsx(PostDetails, {\n    post: post\n  })), __jsx(CommentList, null), __jsx(\"div\", {\n    className: \"mobile-write-comment\"\n  }, __jsx(Vote, {\n    postId: post.post_id,\n    seo: post.seo,\n    likes: post.begeni,\n    total: post.toplam,\n    white: true\n  }), __jsx(WriteComment, {\n    postId: post.post_id\n  }))), __jsx(PostUserSidebar, {\n    userId: post.user_id,\n    nick: post.nick,\n    picture: post.picture,\n    likes: post.begeni,\n    total: post.toplam,\n    group_seo: post.group_seo,\n    name: post.name,\n    postId: post.post_id,\n    seo: post.seo\n  }));\n};\n\nPost.getInitialProps = async ({\n  store,\n  query\n}) => {\n  const post = await store.dispatch(fetchPostDetails(query.slug));\n  return {\n    post\n  };\n};\n\nexport default withAuth(Post);","map":{"version":3,"sources":["E:/projects/nosbir-frontend/pages/post.js"],"names":["Head","GroupSidebar","PostUserSidebar","fetchPostDetails","PostDetails","withAuth","CommentList","Vote","WriteComment","Post","props","post","title","user","post_id","seo","begeni","toplam","user_id","nick","picture","group_seo","name","getInitialProps","store","query","dispatch","slug"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AACA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,SACE,4BACE,MAAC,IAAD,QACE,qBAAQC,IAAI,CAACC,KAAb,CADF,EAEE;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,OAAO,EAAED,IAAI,CAACE;AAAlC,IAFF,EAGE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAEF,IAAI,CAACC;AAAvC,IAHF,CADF,EAME,MAAC,YAAD,OANF,EAOE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAED;AAAnB,IADF,CADF,EAIE,MAAC,WAAD,OAJF,EAME;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,IAAD;AACE,IAAA,MAAM,EAAEA,IAAI,CAACG,OADf;AAEE,IAAA,GAAG,EAAEH,IAAI,CAACI,GAFZ;AAGE,IAAA,KAAK,EAAEJ,IAAI,CAACK,MAHd;AAIE,IAAA,KAAK,EAAEL,IAAI,CAACM,MAJd;AAKE,IAAA,KAAK;AALP,IADF,EAQE,MAAC,YAAD;AAAc,IAAA,MAAM,EAAEN,IAAI,CAACG;AAA3B,IARF,CANF,CAPF,EAwBE,MAAC,eAAD;AACE,IAAA,MAAM,EAAEH,IAAI,CAACO,OADf;AAEE,IAAA,IAAI,EAAEP,IAAI,CAACQ,IAFb;AAGE,IAAA,OAAO,EAAER,IAAI,CAACS,OAHhB;AAIE,IAAA,KAAK,EAAET,IAAI,CAACK,MAJd;AAKE,IAAA,KAAK,EAAEL,IAAI,CAACM,MALd;AAME,IAAA,SAAS,EAAEN,IAAI,CAACU,SANlB;AAOE,IAAA,IAAI,EAAEV,IAAI,CAACW,IAPb;AAQE,IAAA,MAAM,EAAEX,IAAI,CAACG,OARf;AASE,IAAA,GAAG,EAAEH,IAAI,CAACI;AATZ,IAxBF,CADF;AAsCD,CAxCD;;AAyCAN,IAAI,CAACc,eAAL,GAAuB,OAAO;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAP,KAA4B;AACjD,QAAMd,IAAI,GAAG,MAAMa,KAAK,CAACE,QAAN,CAAevB,gBAAgB,CAACsB,KAAK,CAACE,IAAP,CAA/B,CAAnB;AACA,SAAO;AACLhB,IAAAA;AADK,GAAP;AAGD,CALD;;AAOA,eAAeN,QAAQ,CAACI,IAAD,CAAvB","sourcesContent":["import Head from \"next/head\";\r\nimport GroupSidebar from \"../components/groupSidebar\";\r\nimport PostUserSidebar from \"../components/postUserSidebar\";\r\nimport { fetchPostDetails } from \"../store/actions/commentActions\";\r\nimport PostDetails from \"../components/postDetails\";\r\nimport { withAuth } from \"../utils/auth\";\r\nimport CommentList from \"../components/commentList\";\r\nimport Vote from \"../components/vote\";\r\nimport WriteComment from \"../components/writeComment\";\r\nconst Post = props => {\r\n  const { post } = props;\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>{post.title}</title>\r\n        <meta name=\"author\" content={post.user} />\r\n        <meta name=\"description\" content={post.title}></meta>\r\n      </Head>\r\n      <GroupSidebar />\r\n      <div className=\"content\">\r\n        <div className=\"post\">\r\n          <PostDetails post={post} />\r\n        </div>\r\n        <CommentList />\r\n\r\n        <div className=\"mobile-write-comment\">\r\n          <Vote\r\n            postId={post.post_id}\r\n            seo={post.seo}\r\n            likes={post.begeni}\r\n            total={post.toplam}\r\n            white\r\n          />\r\n          <WriteComment postId={post.post_id} />\r\n        </div>\r\n      </div>\r\n      <PostUserSidebar\r\n        userId={post.user_id}\r\n        nick={post.nick}\r\n        picture={post.picture}\r\n        likes={post.begeni}\r\n        total={post.toplam}\r\n        group_seo={post.group_seo}\r\n        name={post.name}\r\n        postId={post.post_id}\r\n        seo={post.seo}\r\n      />\r\n    </>\r\n  );\r\n};\r\nPost.getInitialProps = async ({ store, query }) => {\r\n  const post = await store.dispatch(fetchPostDetails(query.slug));\r\n  return {\r\n    post\r\n  };\r\n};\r\n\r\nexport default withAuth(Post);\r\n"]},"metadata":{},"sourceType":"module"}