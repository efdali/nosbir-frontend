{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport cookie from \"js-cookie\";\nimport jwt_decode from \"jwt-decode\";\nimport { setModalVisibility, LOGIN_MODAL } from \"./modalActions\";\nexport const AUTHENTICATE = \"AUTHENTICATE\";\nexport const authenticate = user => ({\n  type: AUTHENTICATE,\n  user\n});\nexport const DEAUTHENTICATE = \"DEAUTHENTICATE\";\nexport const deauthenticate = () => ({\n  type: DEAUTHENTICATE\n});\nexport const login = (nick, passwd) => {\n  if (!nick || !passwd) return;\n  return (dispatch, getState, http) => {\n    http.post(\"giris.php\", {\n      kadi: nick,\n      sifre: passwd\n    }).then(res => res.data).then(res => {\n      if (res.durum) {\n        localStorage.setItem(\"token\", res.token);\n        cookie.set(\"token\", res.token, {\n          expires: 1\n        });\n        const data = jwt_decode(res.token);\n        dispatch(authenticate(data.data));\n        dispatch(setModalVisibility(LOGIN_MODAL, false));\n      } else {\n        toast.warn(res.mesaj);\n      }\n    }).catch(err => toast.warn(err));\n  };\n};\nexport const register = (nick, passwd, email) => {\n  if (!nick || !passwd || !email) return;\n  return (dispatch, getState, http) => {\n    http.post(\"kayit.php\", {\n      kadi: nick,\n      sifre: passwd,\n      eposta: email\n    }).then(res => res.data).then(res => {\n      if (res.durum) {\n        toast.success(res.mesaj);\n        dispatch(setModalVisibility(LOGIN_MODAL, true));\n      } else toast.warn(res.mesaj);\n    }).catch(err => toast.warn(err));\n  };\n};\nexport const LOGOUT = \"LOGOUT\";\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"token\");\n  cookie.remove(\"token\");\n  dispatch(deauthenticate());\n};\nexport const changeImage = image = (dispatch, getState, http) => {\n  if (!image) return false;\n  var formData = new FormData();\n  formData.append(\"resim\", image);\n  return http.post(\"profil_duzenle.php\", formData).then(res => res.data).then(res => {\n    if (res.durum) {\n      localStorage.setItem(\"token\", res.token);\n      cookie.set(\"token\", res.token, {\n        expires: 1\n      });\n      const data = jwt_decode(res.token);\n      dispatch(authenticate(data.data));\n    } else {\n      toast.warn(res.mesaj);\n    }\n  });\n};","map":{"version":3,"sources":["E:/projects/nosbir-frontend/store/actions/authActions.js"],"names":["toast","cookie","jwt_decode","setModalVisibility","LOGIN_MODAL","AUTHENTICATE","authenticate","user","type","DEAUTHENTICATE","deauthenticate","login","nick","passwd","dispatch","getState","http","post","kadi","sifre","then","res","data","durum","localStorage","setItem","token","set","expires","warn","mesaj","catch","err","register","email","eposta","success","LOGOUT","logout","removeItem","remove","changeImage","image","formData","FormData","append"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\r\nimport cookie from \"js-cookie\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { setModalVisibility, LOGIN_MODAL } from \"./modalActions\";\r\nexport const AUTHENTICATE = \"AUTHENTICATE\";\r\nexport const authenticate = user => ({ type: AUTHENTICATE, user });\r\nexport const DEAUTHENTICATE = \"DEAUTHENTICATE\";\r\nexport const deauthenticate = () => ({ type: DEAUTHENTICATE });\r\n\r\nexport const login = (nick, passwd) => {\r\n  if (!nick || !passwd) return;\r\n\r\n  return (dispatch, getState, http) => {\r\n    http\r\n      .post(\"giris.php\", {\r\n        kadi: nick,\r\n        sifre: passwd\r\n      })\r\n      .then(res => res.data)\r\n      .then(res => {\r\n        if (res.durum) {\r\n          localStorage.setItem(\"token\", res.token);\r\n          cookie.set(\"token\", res.token, { expires: 1 });\r\n          const data = jwt_decode(res.token);\r\n          dispatch(authenticate(data.data));\r\n          dispatch(setModalVisibility(LOGIN_MODAL, false));\r\n        } else {\r\n          toast.warn(res.mesaj);\r\n        }\r\n      })\r\n      .catch(err => toast.warn(err));\r\n  };\r\n};\r\n\r\nexport const register = (nick, passwd, email) => {\r\n  if (!nick || !passwd || !email) return;\r\n\r\n  return (dispatch, getState, http) => {\r\n    http\r\n      .post(\"kayit.php\", {\r\n        kadi: nick,\r\n        sifre: passwd,\r\n        eposta: email\r\n      })\r\n      .then(res => res.data)\r\n      .then(res => {\r\n        if (res.durum) {\r\n          toast.success(res.mesaj);\r\n          dispatch(setModalVisibility(LOGIN_MODAL, true));\r\n        } else toast.warn(res.mesaj);\r\n      })\r\n      .catch(err => toast.warn(err));\r\n  };\r\n};\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"token\");\r\n  cookie.remove(\"token\");\r\n  dispatch(deauthenticate());\r\n};\r\n\r\nexport const changeImage = (image = (dispatch, getState, http) => {\r\n  if (!image) return false;\r\n\r\n  var formData = new FormData();\r\n  formData.append(\"resim\", image);\r\n  return http\r\n    .post(\"profil_duzenle.php\", formData)\r\n    .then(res => res.data)\r\n    .then(res => {\r\n      if (res.durum) {\r\n        localStorage.setItem(\"token\", res.token);\r\n        cookie.set(\"token\", res.token, { expires: 1 });\r\n        const data = jwt_decode(res.token);\r\n        dispatch(authenticate(data.data));\r\n      } else {\r\n        toast.warn(res.mesaj);\r\n      }\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}