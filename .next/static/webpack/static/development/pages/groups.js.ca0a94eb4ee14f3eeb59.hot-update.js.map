{"version":3,"file":"static/webpack/static\\development\\pages\\groups.js.ca0a94eb4ee14f3eeb59.hot-update.js","sources":["webpack:///./pages/groups.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Head from \"next/head\";\r\nimport Link from \"next/link\";\r\nimport Search from \"../components/search\";\r\nimport Image from \"../components/image\";\r\nimport http from \"../utils/http\";\r\nimport { withAuth } from \"../utils/auth\";\r\nconst Groups = ({ groups }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    if (groups.lenght <= 0) {\r\n    }\r\n    console.log(\"effect\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <Head>\r\n        <title>TÃ¼m Gruplar</title>\r\n      </Head>\r\n      <Search value={value} onChange={e => setValue(e.target.value)} />\r\n\r\n      <div className=\"group-container\">\r\n        {groups &&\r\n          groups\r\n            .filter(g => g.name.toLowerCase().includes(value))\r\n            .map(g => (\r\n              <div className=\"group-card\" key={g.group_id}>\r\n                <Link href={`/n/${g.group_seo}`}>\r\n                  <a>\r\n                    <Image\r\n                      src={g.logo}\r\n                      alt={g.name}\r\n                      className=\"group-icon\"\r\n                      group={true}\r\n                    />\r\n                  </a>\r\n                </Link>\r\n                <h2 className=\"group-name\">\r\n                  <Link href={`/${g.group_seo}`}>\r\n                    <a>{g.name}</a>\r\n                  </Link>\r\n                </h2>\r\n              </div>\r\n            ))}\r\n      </div>\r\n\r\n      <style jsx>\r\n        {`\r\n          .content {\r\n            flex: 1;\r\n          }\r\n          .group-container {\r\n            width: 100%;\r\n            margin: 40px auto 0;\r\n            display: flex;\r\n            justify-content: space-evenly;\r\n            align-items: center;\r\n            flex-wrap: wrap;\r\n          }\r\n          .group-card {\r\n            width: 20%;\r\n            height: 240px;\r\n            margin-bottom: 20px;\r\n            background-color: #fff;\r\n            display: flex;\r\n          }\r\n          .left-img-container {\r\n            flex-basis: 20%;\r\n            padding: 6px;\r\n            height: inherit;\r\n            text-align: center;\r\n            background-color: var(--main-red-color);\r\n          }\r\n          .left-img-container a {\r\n            display: block;\r\n            position: relative;\r\n            top: 35%;\r\n            transform: translateY(-50%);\r\n          }\r\n          :global(.group-icon) {\r\n            width: 100px;\r\n            height: 100px;\r\n            margin: 0 auto;\r\n          }\r\n          h2.group-name {\r\n            font-size: var(--big-font-size);\r\n            text-align: center;\r\n            font-family: Tekton-pro, sans-serif;\r\n            margin: 40px 0 10px;\r\n            font-weight: bolder;\r\n          }\r\n          h2.group-name > a {\r\n            color: #fff;\r\n          }\r\n          @media screen and (max-width: 850px) {\r\n            .group-container {\r\n              flex-direction: column;\r\n            }\r\n            .group-card {\r\n              flex: 1;\r\n              width: 100%;\r\n            }\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\nexport default withAuth(Groups);\r\nGroups.getInitialProps = async ctx => {\r\n  const groups = await http\r\n    .get(\"tum_gruplar.php\")\r\n    .then(res => res.data)\r\n    .then(res => res.gruplar);\r\n\r\n  return { groups };\r\n};\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AAdA;AAVA;AAAA;AA4FA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AALA;AACA;AADA;AAMA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}