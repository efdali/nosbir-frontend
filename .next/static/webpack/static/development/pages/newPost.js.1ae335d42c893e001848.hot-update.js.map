{"version":3,"file":"static/webpack/static\\development\\pages\\newPost.js.1ae335d42c893e001848.hot-update.js","sources":["webpack:///./pages/newPost.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport Head from \"next/head\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"next/router\";\r\nimport { withAuth } from \"../utils/auth\";\r\nimport { fetchGroups, groupsSuccess } from \"../store/actions/groupActions\";\r\nimport Loading from \"../components/loading\";\r\nimport Error from \"../components/error\";\r\nimport http from \"../utils/http\";\r\nimport { shareTextPost,shareImagePost } from \"../store/actions/shareActions\";\r\nimport { toast } from \"react-toastify\";\r\nclass NewPost extends Component {\r\n  static async getInitialProps() {\r\n    const asyncGroups = await http\r\n      .get(\"gruplar.php\")\r\n      .then(res => res.data)\r\n      .then(res => {\r\n        if (res.durum) {\r\n          return res.gruplar;\r\n        } else {\r\n          return [];\r\n        }\r\n      })\r\n      .catch(err => []);\r\n    return {\r\n      asyncGroups\r\n    };\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if (props.asyncGroups.length <= 0) {\r\n      props.fetchGroups();\r\n    } else {\r\n      props.groupsSuccess(props.asyncGroups);\r\n    }\r\n    this.state = {\r\n      active: \"state\",\r\n      title: \"\",\r\n      text: \"\",\r\n      groupValue: 0,\r\n      image: \"\",\r\n      picture: \"\"\r\n    };\r\n  }\r\n\r\n  RenderGroups = () => {\r\n    const { groups, isLoading, isRejected, errorMsg } = this.props.groups;\r\n    if (isLoading) return <Loading />;\r\n    else if (isRejected) return <Error msg={errorMsg} />;\r\n    else if (groups.length <= 0)\r\n      return (\r\n        <Error msg=\"Paylaşım yapabileceğiniz grup bulunamadı.Lütfen sonra tekrar deneyin\" />\r\n      );\r\n    else {\r\n      return (\r\n        <ul>\r\n          <li>\r\n            <a className={this.state.groupValue == 9 ? \"active\" : \"\"}\r\n            onClick={e=>this.changeGroup(e,9)}>\r\n              neverfab\r\n            </a>\r\n          </li>\r\n          {groups.map((g, i) => (\r\n            <li key={i}>\r\n              <a\r\n                className={this.state.groupValue === g.group_id ? \"active\" : \"\"}\r\n                onClick={e => this.changeGroup(e, g.group_id)}\r\n              >\r\n                {g.name.toLowerCase()}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n  };\r\n\r\n  changeGroup = (e, id) => {\r\n    e.preventDefault();\r\n    this.setState({ groupValue: id });\r\n    console.log(this.state.groupValue === id);\r\n  };\r\n\r\n  shareHandler = e => {\r\n    e.preventDefault();\r\n\r\n    const { active, title, text, groupValue, picture } = this.state;\r\n\r\n    if (!this.props.isAuthenticated) return false;\r\n\r\n    if (active === \"state\") {\r\n      this.shareText();\r\n    } else if (active === \"picture\") {\r\n      this.shareImage();\r\n    } else if (active === \"link\") {\r\n    }\r\n  };\r\n\r\n  shareText = () => {\r\n    const { title, text, groupValue } = this.state;\r\n    if (!title || !text || groupValue === 0) return false;\r\n\r\n    shareTextPost(title, text, groupValue).then(res => {\r\n      if(res.durum){\r\n        this.props.router.push(\"/nos/\"+res.baslik);\r\n      }else{\r\n        toast.error(res.mesaj);\r\n      }\r\n    });\r\n  };\r\n\r\n  shareImage=()=>{\r\n    const {title,image,groupValue}=this.state;\r\n    \r\n    if(!title || !image || !groupValue) return false;\r\n\r\n    shareImagePost(title,image,groupValue)\r\n    .then(res=>{\r\n      if(res.durum){\r\n        this.props.router.push(\"/nos/\"+res.baslik);\r\n      }else{\r\n        toast.error(res.mesaj);\r\n      }\r\n    });\r\n  }\r\n\r\n  onImageChange = e => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      this.setState({ image: e.target.files[0] });\r\n      let reader = new FileReader();\r\n      reader.onload = event => {\r\n        this.setState({ picture: event.target.result });\r\n      };\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Head>\r\n          <title>Yeni Post</title>\r\n        </Head>\r\n        <div className=\"content new-post-content\">\r\n          <div>\r\n            <a onClick={() => this.props.router.back()}>\r\n              <img src=\"/go-back-icon.png\" alt=\"geri git\" />\r\n            </a>\r\n          </div>\r\n          <form>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"başlık\"\r\n              className=\"post-title\"\r\n              value={this.state.title}\r\n              onChange={e => this.setState({ title: e.target.value })}\r\n              required={true}\r\n            />\r\n            <div className=\"new-post-form\">\r\n              <div\r\n                className={`tab state-tab ${\r\n                  this.state.active !== \"state\" ? \"hidden\" : \"\"\r\n                }`}\r\n              >\r\n                <textarea\r\n                  className=\"post-content\"\r\n                  placeholder=\"ne düşünüyorsun?\"\r\n                  value={this.state.text}\r\n                  onChange={e => this.setState({ text: e.target.value })}\r\n                ></textarea>\r\n              </div>\r\n              <div\r\n                className={`tab picture-tab ${\r\n                  this.state.active !== \"picture\" ? \"hidden\" : \"\"\r\n                }`}\r\n              >\r\n                {this.state.image ? (\r\n                  <>\r\n                    <img src={this.state.picture} alt=\"post resim\" />\r\n                    <div className=\"picture-tab-footer\">\r\n                      <button\r\n                        onClick={e => {\r\n                          e.preventDefault();\r\n                          this.setState({ image: \"\", picture: \"\" });\r\n                        }}\r\n                      >\r\n                        <img src=\"/delete-icon.png\" alt=\"resmi sil\" />\r\n                      </button>\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <label className=\"custom-file-input\">\r\n                    <span>Gözat</span>Paylaşmak istediğin resmi seç\r\n                    <input\r\n                      type=\"file\"\r\n                      value={this.state.image}\r\n                      onChange={this.onImageChange}\r\n                      className=\"file-input\"\r\n                    />\r\n                  </label>\r\n                )}\r\n              </div>\r\n              <div\r\n                className={`tab link-tab ${\r\n                  this.state.active !== \"link\" ? \"hidden\" : \"\"\r\n                }`}\r\n              >\r\n                link\r\n              </div>\r\n              <ul className=\"button-container\">\r\n                <li>\r\n                  <button\r\n                    onClick={e => {\r\n                      e.preventDefault();\r\n                      this.setState({ active: \"state\" });\r\n                    }}\r\n                  >\r\n                    durum\r\n                  </button>\r\n                  <img src=\"/status-icon.png\" alt=\"post\" />\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    onClick={e => {\r\n                      e.preventDefault();\r\n                      this.setState({ active: \"picture\" });\r\n                    }}\r\n                  >\r\n                    görsel\r\n                  </button>\r\n                  <img src=\"/post-picture.png\" alt=\"post\" />\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    onClick={e => {\r\n                      e.preventDefault();\r\n                      this.setState({ active: \"link\" });\r\n                    }}\r\n                  >\r\n                    link\r\n                  </button>\r\n                  <img src=\"/post-link.png\" alt=\"post\" />\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    className=\"default-btn share-btn\"\r\n                    onClick={this.shareHandler}\r\n                  >\r\n                    paylaş\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </form>\r\n          <div className=\"groups-input-container\">\r\n            <h4>topluluk seç</h4>\r\n            <this.RenderGroups />\r\n          </div>\r\n        </div>\r\n        <aside className=\"right-sidebar new-post-sidebar\">\r\n          <p>\r\n            unutma her yazdığın yazıyı bundan yıllar sonra çocukların hatta\r\n            torunların okuyabilir bunun için yazdıklarını senden yıllar sonraki\r\n            torunlarına öğüt veriyormuşçasına yaz. Ne kendini utandır ne de\r\n            torunlarını yazdıklarından dolayı utandır. Senin yazdıklarından\r\n            etkilenip hayatında radikal kararlar alabilecek insanlar var onlara\r\n            iyi örnek ol.\r\n          </p>\r\n        </aside>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  groups: state.groups,\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\nexport default connect(mapStateToProps, { fetchGroups, groupsSuccess })(\r\n  withRouter(withAuth(NewPost, true))\r\n);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;AAXA;AAWA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;AAIA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AAAA;AAGA;AAGA;AACA;AAAA;AAAA;AADA;AAKA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAFA;AAYA;AACA;AACA;AAjDA;AAmDA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAvDA;AAyDA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAtEA;AAuEA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnFA;AAoFA;AAAA;AAAA;AAAA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlGA;AAoGA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AA1GA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AARA;AAgBA;AACA;;;AA6FA;AAAA;AACA;AAAA;AAKA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAQA;AAAA;AAEA;AADA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAQA;AADA;AAOA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAMA;AAAA;AAAA;AAKA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAUA;AADA;AAOA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAQA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAQA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAQA;AAAA;AAAA;AAIA;AACA;AAFA;AAUA;AAAA;AAKA;AAAA;AAYA;;;;AAtQA;AACA;AAuQA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}