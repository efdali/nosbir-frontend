{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.56def73ee315bce92843.hot-update.js","sources":["webpack:///./components/groupSidebar.js"],"sourcesContent":["import React from \"react\";\r\nimport Link from \"next/link\";\r\nimport { connect } from \"react-redux\";\r\nimport Loading from \"./loading\";\r\nimport Error from \"./error\";\r\nimport { fetchGroups } from \"../store/actions/groupActions\";\r\nimport { withRouter } from \"next/router\";\r\nclass GroupSidebar extends React.Component {\r\n  componentDidMount() {\r\n    if (document.documentElement.offsetWidth >= 490) {\r\n      this.props.fetchGroups();\r\n    } else {\r\n      window.addEventListener(\"resize\", this.resizeHandler);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.resizeHandler);\r\n  }\r\n\r\n  resizeHandler = () => {\r\n    if (\r\n      document.documentElement.offsetWidth >= 490 &&\r\n      this.props.groups.length <= 0\r\n    ) {\r\n      window.removeEventListener(\"resize\", this.resizeHandler);\r\n      this.props.fetchGroups();\r\n    }\r\n  };\r\n\r\n  renderComponent = () => {\r\n    const { slug } = this.props.router.query;\r\n    const { groups, isLoading, isRejected, msg } = this.props;\r\n    if (isLoading) {\r\n      return <Loading />;\r\n    } else if (isRejected) {\r\n      return <Error msg={msg} />;\r\n    } else if (!groups.length) {\r\n      return <Error msg=\"Grup Bulunamadı\" />;\r\n    } else {\r\n      return (\r\n        <ul>\r\n          <li>\r\n            <Link href=\"/gruplar\">\r\n              <a className=\"all-groups\">Tüm Gruplar &#8594;</a>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link href=\"/anasayfa\">\r\n              <a\r\n                className={slug === undefined ? \"active\" : \"\"}\r\n                style={{ color: \"var(--second-red-color)\" }}\r\n              >\r\n                anasayfa\r\n              </a>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link href=\"/gundem\">\r\n              <a\r\n                className={slug === \"gundem\" ? \"active\" : \"\"}\r\n                style={{ color: \"var(--second-red-color)\" }}\r\n              >\r\n                gündem\r\n              </a>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link href=\"/n/neverfab\">\r\n              <a\r\n                className={slug === \"neverfab\" ? \"active \" : \"\"}\r\n                style={{ color: \"var(--main-green-color\" }}\r\n              >\r\n                neverfab\r\n              </a>\r\n            </Link>\r\n          </li>\r\n          {groups.map(g => (\r\n            <li key={g.group_id}>\r\n              <Link href={`/n/${g.group_seo}`}>\r\n                <a className={slug === g.group_seo ? \"active\" : \"\"}>\r\n                  {g.name.toLowerCase()}\r\n                </a>\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <aside className=\"left-sidebar\">{this.renderComponent()}</aside>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ groups, posts }) => ({\r\n  isLoading: groups.group_loading,\r\n  isRejected: groups.group_reject,\r\n  msg: groups.group_msg,\r\n  groups: groups.groups\r\n});\r\nexport default connect(mapStateToProps, { fetchGroups })(\r\n  withRouter(GroupSidebar)\r\n);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;AAYA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAIA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AASA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AASA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAQA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAHA;AAWA;AACA;AACA;;;;;;AAjFA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AAyEA;AACA;AAAA;AAAA;AACA;;;;AArFA;AACA;AAuFA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AACA;AAKA;AAAA;AAAA;;;;A","sourceRoot":""}